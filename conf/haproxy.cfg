global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend http

   bind 0.0.0.0:80
   option http-server-close
   log /dev/log local0 debug

   use_backend postgres if { hdr(host) -i postgres.m }
   use_backend letsencrypt if { path_beg -i /.well-known/acme-challenge/ }

   use_backend profi if { hdr(host) -i ----maindomain---- }
   use_backend file if { hdr(host) -i file001.----maindomain---- }
   use_backend socket if { hdr(host) -i socket.----maindomain---- }
   use_backend static if { hdr(host) -i static.----maindomain---- }
   use_backend front if { always_true }

backend profi
  server profi localhost:8080 check port 8080

backend file
  server file localhost:9001 check port 9001

backend socket
  server socket localhost:5000 check port 5000

backend static
  server static localhost:9000 check port 9000

backend front
  server front localhost:8888 check port 8888

backend letsencrypt
  server front localhost:4444 check port 4444

backend postgres
  server postgres localhost:80 check port 80

